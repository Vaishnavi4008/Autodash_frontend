import React, { useEffect, useState } from "react";
import DashboardCard01 from "../partials/dashboard/DashboardCard01";
import DashboardCard02 from "../partials/dashboard/DashboardCard02";
import DashboardCard03 from "../partials/dashboard/DashboardCard03";
import DashboardCard04 from "../partials/dashboard/DashboardCard04";
import DashboardCard05 from "../partials/dashboard/DashboardCard05";
import DashboardCard06 from "../partials/dashboard/DashboardCard06";
import DashboardCard07 from "../partials/dashboard/DashboardCard07";
import DashboardCard08 from "../partials/dashboard/DashboardCard08";
import DashboardCard09 from "../partials/dashboard/DashboardCard09";
import DashboardCard10 from "../partials/dashboard/DashboardCard10";
import DashboardCard11 from "../partials/dashboard/DashboardCard11";
import DashboardCard12 from "../partials/dashboard/DashboardCard12";
import DashboardCard13 from "../partials/dashboard/DashboardCard13";
import DashboardCard14 from "../partials/dashboard/DashboardCard14";
import DashboardCard15 from "../partials/dashboard/DashboardCard15";
import DashboardCard16 from "../partials/dashboard/DashboardCard16";

import Backdrop from "@mui/material/Backdrop";
import CircularProgress from "@mui/material/CircularProgress";
import LoaderComponent from "./Loader";

const DashboardCreator = ({ pageNo, setpageNo }) => {
  const [openCSVUploader, setOpenCSVUploader] = useState(false);
  const [fileInput1, setFileInput1] = useState("");
  const [generatedChartData, setGeneratedChartData] = useState([
    {
        "chartType": "BAR CHART",
        "chartData": {
            "chartName": "Total by City and Product line",
            "labels": [
                "Yangon",
                "Naypyitaw",
                "Mandalay"
            ],
            "dataset": [
                {
                    "barLabel": "Product line",
                    "data": [
                        548,
                        80,
                        340,
                        489,
                        634,
                        627,
                        433,
                        772,
                        76,
                        172,
                        60,
                        107,
                        246,
                        453,
                        749,
                        590,
                        506,
                        457,
                        172,
                        84,
                        451,
                        277,
                        69,
                        181,
                        279,
                        441,
                        35,
                        184,
                        463,
                        235,
                        494,
                        737,
                        703,
                        202,
                        417,
                        71,
                        328,
                        575,
                        461,
                        253,
                        91,
                        117,
                        435,
                        829,
                        32,
                        394,
                        535,
                        189,
                        119,
                        867,
                        671,
                        234,
                        75,
                        16,
                        33,
                        722,
                        93,
                        752,
                        759,
                        192,
                        77,
                        351,
                        520,
                        166,
                        318,
                        166,
                        70,
                        614,
                        827,
                        19,
                        939,
                        652,
                        152,
                        478,
                        705,
                        437,
                        463,
                        189,
                        822,
                        106,
                        624,
                        304,
                        161,
                        337,
                        256,
                        610,
                        401,
                        362,
                        44,
                        485,
                        198,
                        471,
                        161,
                        608,
                        94,
                        102,
                        922,
                        78,
                        166,
                        521,
                        51,
                        742,
                        218,
                        367,
                        223,
                        931,
                        172,
                        391,
                        321,
                        860,
                        34,
                        309,
                        535,
                        548,
                        763,
                        85,
                        115,
                        53,
                        115,
                        112,
                        836,
                        419,
                        944,
                        536,
                        474,
                        688,
                        169,
                        299,
                        575,
                        853,
                        291,
                        580,
                        146,
                        550,
                        512,
                        284,
                        138,
                        216,
                        545,
                        609,
                        942,
                        950,
                        720,
                        31,
                        491,
                        291,
                        316,
                        277,
                        603,
                        272,
                        384,
                        254,
                        786,
                        103,
                        680,
                        484,
                        75,
                        263,
                        918,
                        588,
                        362,
                        66,
                        336,
                        160,
                        418,
                        357,
                        1003,
                        1039,
                        323,
                        510,
                        367,
                        420,
                        175,
                        333,
                        166,
                        319,
                        186,
                        165,
                        465,
                        273,
                        472,
                        323,
                        162,
                        288,
                        90,
                        56,
                        793,
                        195,
                        77,
                        293,
                        242,
                        154,
                        829,
                        107,
                        171,
                        78,
                        91,
                        26,
                        174,
                        374,
                        120,
                        241,
                        451,
                        271,
                        93,
                        217,
                        629,
                        299,
                        95,
                        942,
                        247,
                        881,
                        484,
                        146,
                        217,
                        19,
                        130,
                        298,
                        796,
                        180,
                        285,
                        456,
                        62,
                        13,
                        90,
                        183,
                        655,
                        155,
                        571,
                        532,
                        170,
                        33,
                        794,
                        310,
                        545,
                        195,
                        91,
                        232,
                        69,
                        94,
                        235,
                        125,
                        195,
                        263,
                        788,
                        399,
                        256,
                        94,
                        326,
                        536,
                        439,
                        369,
                        30,
                        99,
                        494,
                        137,
                        69,
                        163,
                        135,
                        276,
                        709,
                        69,
                        160,
                        233,
                        57,
                        723,
                        148,
                        783,
                        297,
                        373,
                        354,
                        44,
                        203,
                        25,
                        628,
                        352,
                        229,
                        400,
                        745,
                        462,
                        587,
                        38,
                        16,
                        628,
                        200,
                        350,
                        78,
                        224,
                        356,
                        697,
                        423,
                        204,
                        65,
                        76,
                        190,
                        272,
                        121,
                        493,
                        252
                    ]
                }
            ],
            "chartTitle": "Total Sales by City and Product line"
        },
        "code": "import pandas as pd\n\ndef read_csv_and_create_chart(path_to_csv_file):\n    # Read the CSV file\n    df = pd.read_csv(path_to_csv_file)\n\n    # Select columns for trend analysis\n    columns_to_analyze = ['City', 'Product line', 'Total']\n    df_analyzed = df[columns_to_analyze]\n\n    # Extract the data for the 'Total' column\n    data = df_analyzed['Total'].tolist()\n\n    # Create the chart data structure\n    result = {\n        'chartName': 'Total by City and Product line',\n        'labels': df_analyzed['City'].unique().tolist(),\n        'dataset': [\n            {\n                'barLabel': 'Product line',\n                'data': [int(x) for x in data]\n            }\n        ],\n        'chartTitle': 'Total Sales by City and Product line'\n    }\n\n    return result\n\n# Example usage\npath_to_csv_file = 'D:/AutoDash/app/csv/test-new.csv'\nresults = read_csv_and_create_chart(path_to_csv_file)\nprint(results)"
    },
    {
        "chartType": "PIE CHART",
        "chartData": {
            "chartName": "Trend Analysis",
            "labels": [
                "A",
                "C",
                "B",
                "Home and lifestyle",
                "Sports and travel",
                "Health and beauty",
                "Electronic accessories",
                "Fashion accessories",
                "Food and beverages"
            ],
            "data": [
                103,
                101,
                95,
                56,
                51,
                50,
                49,
                47,
                46
            ],
            "chartTitle": "Trend Analysis"
        },
        "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef read_and_plot(path):\n    # Read the CSV file\n    df = pd.read_csv(path)\n\n    # Select columns for trend analysis\n    cols = ['Branch', 'Product line']\n\n    # Create a pie chart\n    results = {\n        'chartName': 'Trend Analysis',\n        'labels': [],\n        'data': [],\n        'chartTitle': 'Trend Analysis'\n    }\n\n    for col in cols:\n        # Extract data based on the column\n        values = df[col].value_counts().values\n        labels = df[col].value_counts().index\n\n        # Add the data to the results dictionary\n        results['labels'].extend(list(labels))\n        results['data'].extend(values.tolist())\n\n    # Plot the pie chart\n    plt.pie(results['data'], labels=results['labels'], autopct='%1.1f%%')\n    plt.title(results['chartTitle'])\n    plt.show()\n\n    return results\n\n# Call the function\npath = \"D:/AutoDash/app/csv/test-new.csv\"\nresults = read_and_plot(path)\nprint(results)"
    },
    {
        "chartType": "LINE CHART SINGLE",
        "chartData": {
            "chartName": "Total Sales Over Time",
            "labels": [
                "1/5/2019",
                "3/8/2019",
                "3/3/2019",
                "1/27/2019",
                "2/8/2019",
                "3/25/2019",
                "2/25/2019",
                "2/24/2019",
                "1/10/2019",
                "2/20/2019",
                "2/6/2019",
                "3/9/2019",
                "2/12/2019",
                "2/7/2019",
                "3/29/2019",
                "1/15/2019",
                "3/11/2019",
                "1/1/2019",
                "1/21/2019",
                "3/11/2019",
                "2/25/2019",
                "3/5/2019",
                "3/15/2019",
                "2/17/2019",
                "3/2/2019",
                "3/22/2019",
                "2/8/2019",
                "3/10/2019",
                "1/25/2019",
                "3/15/2019",
                "2/25/2019",
                "1/28/2019",
                "1/10/2019",
                "3/15/2019",
                "2/6/2019",
                "1/7/2019",
                "3/10/2019",
                "1/15/2019",
                "3/23/2019",
                "3/3/2019",
                "1/17/2019",
                "2/2/2019",
                "2/8/2019",
                "3/4/2019",
                "3/16/2019",
                "3/9/2019",
                "2/27/2019",
                "2/6/2019",
                "2/10/2019",
                "3/19/2019",
                "2/3/2019",
                "2/10/2019",
                "3/22/2019",
                "1/25/2019",
                "3/7/2019",
                "2/28/2019",
                "3/27/2019",
                "2/7/2019",
                "1/20/2019",
                "3/12/2019",
                "2/15/2019",
                "2/24/2019",
                "2/3/2019",
                "3/6/2019",
                "2/14/2019",
                "3/13/2019",
                "2/10/2019",
                "1/7/2019",
                "1/24/2019",
                "2/2/2019",
                "1/6/2019",
                "2/11/2019",
                "3/5/2019",
                "3/9/2019",
                "1/22/2019",
                "1/13/2019",
                "1/9/2019",
                "1/12/2019",
                "3/5/2019",
                "1/22/2019",
                "1/21/2019",
                "1/26/2019",
                "1/23/2019",
                "2/23/2019",
                "3/9/2019",
                "3/5/2019",
                "3/25/2019",
                "3/27/2019",
                "1/2/2019",
                "2/27/2019",
                "1/23/2019",
                "1/26/2019",
                "1/10/2019",
                "3/12/2019",
                "2/6/2019",
                "3/8/2019",
                "3/29/2019",
                "2/9/2019",
                "3/23/2019",
                "3/5/2019",
                "3/26/2019",
                "3/1/2019",
                "2/1/2019",
                "3/28/2019",
                "3/19/2019",
                "1/12/2019",
                "1/5/2019",
                "3/22/2019",
                "3/24/2019",
                "3/3/2019",
                "2/5/2019",
                "2/5/2019",
                "2/15/2019",
                "1/19/2019",
                "2/1/2019",
                "3/2/2019",
                "3/5/2019",
                "1/16/2019",
                "2/2/2019",
                "1/20/2019",
                "2/14/2019",
                "1/12/2019",
                "3/9/2019",
                "3/13/2019",
                "3/9/2019",
                "3/10/2019",
                "1/27/2019",
                "1/8/2019",
                "1/8/2019",
                "2/8/2019",
                "1/25/2019",
                "3/6/2019",
                "2/10/2019",
                "2/17/2019",
                "3/8/2019",
                "2/18/2019",
                "1/18/2019",
                "2/18/2019",
                "2/16/2019",
                "3/16/2019",
                "1/23/2019",
                "1/25/2019",
                "2/5/2019",
                "2/22/2019",
                "1/21/2019",
                "3/8/2019",
                "2/10/2019",
                "3/19/2019",
                "3/6/2019",
                "3/27/2019",
                "3/23/2019",
                "3/11/2019",
                "1/29/2019",
                "2/7/2019",
                "1/28/2019",
                "2/20/2019",
                "1/4/2019",
                "3/7/2019",
                "3/30/2019",
                "3/27/2019",
                "1/19/2019",
                "2/25/2019",
                "3/13/2019",
                "1/30/2019",
                "2/20/2019",
                "2/25/2019",
                "1/16/2019",
                "2/8/2019",
                "1/19/2019",
                "2/1/2019",
                "1/3/2019",
                "1/26/2019",
                "3/3/2019",
                "1/19/2019",
                "1/18/2019",
                "3/21/2019",
                "3/3/2019",
                "2/13/2019",
                "3/23/2019",
                "1/28/2019",
                "2/9/2019",
                "1/23/2019",
                "3/23/2019",
                "1/25/2019",
                "3/4/2019",
                "3/5/2019",
                "3/3/2019",
                "2/8/2019",
                "2/10/2019",
                "1/28/2019",
                "2/11/2019",
                "1/15/2019",
                "3/16/2019",
                "1/26/2019",
                "3/19/2019",
                "1/13/2019",
                "3/26/2019",
                "3/23/2019",
                "3/12/2019",
                "2/17/2019",
                "1/29/2019",
                "3/15/2019",
                "1/14/2019",
                "2/6/2019",
                "2/15/2019",
                "1/3/2019",
                "1/4/2019",
                "3/18/2019",
                "3/28/2019",
                "3/2/2019",
                "1/25/2019",
                "1/16/2019",
                "3/20/2019",
                "1/4/2019",
                "3/11/2019",
                "3/22/2019",
                "3/24/2019",
                "2/21/2019",
                "2/12/2019",
                "3/10/2019",
                "1/31/2019",
                "3/6/2019",
                "2/17/2019",
                "2/21/2019",
                "3/20/2019",
                "1/11/2019",
                "1/26/2019",
                "1/31/2019",
                "2/26/2019",
                "3/11/2019",
                "1/26/2019",
                "3/12/2019",
                "2/11/2019",
                "2/21/2019",
                "3/9/2019",
                "1/20/2019",
                "1/28/2019",
                "3/5/2019",
                "3/2/2019",
                "1/11/2019",
                "1/11/2019",
                "3/11/2019",
                "2/28/2019",
                "1/5/2019",
                "2/2/2019",
                "1/1/2019",
                "2/9/2019",
                "1/23/2019",
                "1/7/2019",
                "1/14/2019",
                "2/2/2019",
                "3/17/2019",
                "3/2/2019",
                "3/16/2019",
                "1/6/2019",
                "1/29/2019",
                "1/31/2019",
                "2/5/2019",
                "2/13/2019",
                "2/7/2019",
                "3/19/2019",
                "3/7/2019",
                "3/13/2019",
                "2/9/2019",
                "2/26/2019",
                "3/12/2019",
                "3/14/2019",
                "1/8/2019",
                "1/5/2019",
                "1/4/2019",
                "3/6/2019",
                "1/3/2019",
                "1/7/2019",
                "1/27/2019",
                "2/26/2019",
                "1/7/2019",
                "1/7/2019",
                "2/2/2019",
                "3/20/2019",
                "3/20/2019",
                "2/15/2019",
                "3/6/2019",
                "1/6/2019",
                "3/4/2019",
                "3/12/2019",
                "2/20/2019",
                "3/24/2019",
                "1/31/2019",
                "1/25/2019",
                "2/3/2019",
                "1/24/2019",
                "3/14/2019",
                "2/18/2019",
                "1/21/2019",
                "3/13/2019",
                "3/3/2019",
                "3/29/2019",
                "1/10/2019",
                "1/25/2019"
            ],
            "dataset": [
                {
                    "x-axis": "Date",
                    "y-axis": "Total",
                    "lineLabel": "Total Sales",
                    "data": [
                        548.9715,
                        80.22,
                        340.5255,
                        489.048,
                        634.3785,
                        627.6165,
                        433.692,
                        772.38,
                        76.146,
                        172.746,
                        60.816,
                        107.142,
                        246.4875,
                        453.495,
                        749.49,
                        590.436,
                        506.6355,
                        457.443,
                        172.2105,
                        84.63,
                        451.71,
                        277.137,
                        69.72,
                        181.44,
                        279.1845,
                        441.756,
                        35.196,
                        184.107,
                        463.89,
                        235.2105,
                        494.1825,
                        737.7615,
                        703.752,
                        202.818,
                        417.564,
                        71.526,
                        328.755,
                        575.316,
                        461.328,
                        253.008,
                        91.056,
                        117.831,
                        435.456,
                        829.08,
                        32.277,
                        394.632,
                        535.7205,
                        189.0945,
                        119.259,
                        867.615,
                        671.79,
                        234.0975,
                        75.054,
                        16.2015,
                        33.936,
                        722.232,
                        93.114,
                        752.64,
                        759.675,
                        192.843,
                        77.931,
                        351.099,
                        520.4115,
                        166.005,
                        318.108,
                        166.635,
                        70.287,
                        614.943,
                        827.085,
                        19.2465,
                        939.54,
                        652.26,
                        152.838,
                        478.233,
                        705.6315,
                        437.325,
                        463.428,
                        189.0945,
                        822.255,
                        106.995,
                        624.897,
                        304.542,
                        161.7,
                        337.512,
                        256.7775,
                        610.491,
                        401.73,
                        362.943,
                        44.5935,
                        485.037,
                        198.996,
                        471.03,
                        161.553,
                        608.202,
                        94.2375,
                        102.018,
                        922.635,
                        78.435,
                        166.1625,
                        521.01,
                        51.1455,
                        742.2975,
                        218.0115,
                        367.038,
                        223.0725,
                        931.035,
                        172.494,
                        391.419,
                        321.111,
                        860.685,
                        34.629,
                        309.3615,
                        535.374,
                        548.7615,
                        763.4655,
                        85.113,
                        115.185,
                        53.928,
                        115.08,
                        112.224,
                        836.304,
                        419.832,
                        944.622,
                        536.844,
                        474.348,
                        688.6215,
                        169.3125,
                        299.8485,
                        575.736,
                        853.146,
                        291.207,
                        580.419,
                        146.328,
                        550.935,
                        512.19,
                        284.193,
                        138.1275,
                        216.846,
                        545.055,
                        609,
                        942.9,
                        950.25,
                        720.3,
                        31.9305,
                        491.085,
                        291.438,
                        316.47,
                        277.788,
                        603.624,
                        272.664,
                        384.468,
                        254.016,
                        786.618,
                        103.824,
                        680.148,
                        484.5225,
                        75.7785,
                        263.97,
                        918.729,
                        588.357,
                        362.712,
                        66.8745,
                        336.5565,
                        160.44,
                        418.95,
                        357.588,
                        1003.59,
                        1039.29,
                        323.064,
                        510.972,
                        367.5525,
                        420.2625,
                        175.14,
                        333.207,
                        166.236,
                        319.788,
                        186.228,
                        165.4485,
                        465.444,
                        273.42,
                        472.311,
                        323.148,
                        162.75,
                        288.204,
                        90.699,
                        56.952,
                        793.716,
                        195.174,
                        77.7735,
                        293.202,
                        242.676,
                        154.392,
                        829.71,
                        107.31,
                        171.7275,
                        78.0045,
                        91.77,
                        26.5545,
                        174.3,
                        374.7975,
                        120.645,
                        241.458,
                        451.3635,
                        271.95,
                        93.2925,
                        217.6335,
                        629.8425,
                        299.565,
                        95.6655,
                        942.4485,
                        247.8735,
                        881.307,
                        484.89,
                        146.223,
                        217.6335,
                        19.194,
                        130.0425,
                        298.116,
                        796.908,
                        180.621,
                        285.705,
                        456.288,
                        62.0025,
                        13.167,
                        90.825,
                        183.036,
                        655.5465,
                        155.652,
                        571.41,
                        532.728,
                        170.877,
                        33.3585,
                        794.6505,
                        310.044,
                        545.37,
                        195.594,
                        91.4025,
                        232.155,
                        69.405,
                        94.1745,
                        235.683,
                        125.517,
                        195.72,
                        263.13,
                        788.508,
                        399.756,
                        256.41,
                        94.185,
                        326.424,
                        536.991,
                        439.8975,
                        369.495,
                        30.219,
                        99.75,
                        494.76,
                        137.004,
                        69.6675,
                        163.233,
                        135.45,
                        276.948,
                        709.317,
                        69.09,
                        160.86,
                        233.52,
                        57.1725,
                        723.24,
                        148.974,
                        783.3,
                        297.108,
                        373.17,
                        354.0075,
                        44.352,
                        203.553,
                        25.263,
                        628.173,
                        352.5795,
                        229.11,
                        400.764,
                        745.395,
                        462.21,
                        587.664,
                        38.85,
                        16.107,
                        628.929,
                        200.214,
                        350.07,
                        78.603,
                        224.4375,
                        356.5485,
                        697.368,
                        423.15,
                        204.6975,
                        65.604,
                        76.356,
                        190.155,
                        272.58,
                        121.128,
                        493.794,
                        252.042
                    ]
                }
            ],
            "chartTitle": "Total Sales Over Time"
        },
        "code": "import pandas as pd\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\n\ndef read_csv_and_plot(csv_path):\n    # Read the CSV file\n    dfs = pd.read_csv(csv_path)\n\n    # Select columns for trend analysis\n    columns = ['Date', 'Total']\n    dfs = dfs[columns]\n\n    # Extract data for a single line chart\n    chart_name = 'Total Sales Over Time'\n    labels = []\n    dataset = defaultdict(list)\n    data = dfs['Total'].values.tolist()\n    for date, value in zip(dfs['Date'].values.tolist(), data):\n        labels.append(date)\n        dataset['Date'].append(date)\n        dataset['Total'].append(value)\n\n    # Create the chart\n    plt.plot(labels, data)\n    plt.xlabel('Date')\n    plt.ylabel('Total')\n    plt.title(chart_name)\n    plt.show()\n\n    # Return the data in the required format\n    result = {\n        'chartName': chart_name,\n        'labels': labels,\n        'dataset': [\n            {\n                'x-axis': 'Date',\n                'y-axis': 'Total',\n                'lineLabel': 'Total Sales',\n                'data': data\n            }\n        ],\n        'chartTitle': chart_name\n    }\n    return result\n\n# Call the function and store the result in the 'results' variable\ncsv_path = 'D:/AutoDash/app/csv/test-new.csv'\nresults = read_csv_and_plot(csv_path)"
    },
    {
        "chartType": "LINE CHART MULTIPLE",
        "chartData": {
            "chartName": "Total Sales by Date and Product Line",
            "labels": [
                "1/5/2019",
                "3/8/2019",
                "3/3/2019",
                "1/27/2019",
                "2/8/2019",
                "3/25/2019",
                "2/25/2019",
                "2/24/2019",
                "1/10/2019",
                "2/20/2019",
                "2/6/2019",
                "3/9/2019",
                "2/12/2019",
                "2/7/2019",
                "3/29/2019",
                "1/15/2019",
                "3/11/2019",
                "1/1/2019",
                "1/21/2019",
                "3/5/2019",
                "3/15/2019",
                "2/17/2019",
                "3/2/2019",
                "3/22/2019",
                "3/10/2019",
                "1/25/2019",
                "1/28/2019",
                "1/7/2019",
                "3/23/2019",
                "1/17/2019",
                "2/2/2019",
                "3/4/2019",
                "3/16/2019",
                "2/27/2019",
                "2/10/2019",
                "3/19/2019",
                "2/3/2019",
                "3/7/2019",
                "2/28/2019",
                "3/27/2019",
                "1/20/2019",
                "3/12/2019",
                "2/15/2019",
                "3/6/2019",
                "2/14/2019",
                "3/13/2019",
                "1/24/2019",
                "1/6/2019",
                "2/11/2019",
                "1/22/2019",
                "1/13/2019",
                "1/9/2019",
                "1/12/2019",
                "1/26/2019",
                "1/23/2019",
                "2/23/2019",
                "1/2/2019",
                "2/9/2019",
                "3/26/2019",
                "3/1/2019",
                "2/1/2019",
                "3/28/2019",
                "3/24/2019",
                "2/5/2019",
                "1/19/2019",
                "1/16/2019",
                "1/8/2019",
                "2/18/2019",
                "1/18/2019",
                "2/16/2019",
                "2/22/2019",
                "1/29/2019",
                "1/4/2019",
                "3/30/2019",
                "1/30/2019",
                "1/3/2019",
                "3/21/2019",
                "2/13/2019",
                "1/14/2019",
                "3/18/2019",
                "3/20/2019",
                "2/21/2019",
                "1/31/2019",
                "1/11/2019",
                "2/26/2019",
                "3/17/2019",
                "3/14/2019"
            ],
            "dataset": [
                {
                    "x-axis": "[\"1\\/10\\/2019\",\"1\\/21\\/2019\",\"1\\/22\\/2019\",\"1\\/25\\/2019\",\"1\\/26\\/2019\",\"1\\/27\\/2019\",\"1\\/28\\/2019\",\"1\\/3\\/2019\",\"1\\/5\\/2019\",\"2\\/10\\/2019\",\"2\\/11\\/2019\",\"2\\/14\\/2019\",\"2\\/2\\/2019\",\"2\\/20\\/2019\",\"2\\/25\\/2019\",\"2\\/26\\/2019\",\"2\\/27\\/2019\",\"2\\/5\\/2019\",\"2\\/6\\/2019\",\"2\\/7\\/2019\",\"3\\/11\\/2019\",\"3\\/12\\/2019\",\"3\\/13\\/2019\",\"3\\/15\\/2019\",\"3\\/16\\/2019\",\"3\\/19\\/2019\",\"3\\/23\\/2019\",\"3\\/26\\/2019\",\"3\\/27\\/2019\",\"3\\/29\\/2019\",\"3\\/30\\/2019\",\"3\\/4\\/2019\",\"3\\/5\\/2019\",\"3\\/8\\/2019\",\"3\\/9\\/2019\"]",
                    "y-axis": "[76.146,624.897,106.995,1238.454,655.5465,489.048,364.8225,629.538,548.9715,70.287,794.6505,318.108,19.2465,350.07,357.588,628.173,1020.7575,1029.6615,366.1875,752.64,632.1525,982.716,356.79,438.0285,32.277,500.8605,461.328,91.77,272.664,1672.125,918.729,628.929,277.137,803.628,545.37]",
                    "lineLabels": "Health and beauty Total Sales",
                    "data": [
                        76.146,
                        624.897,
                        106.995,
                        1238.454,
                        655.5465,
                        489.048,
                        364.8225,
                        629.538,
                        548.9715,
                        70.287,
                        794.6505,
                        318.108,
                        19.2465,
                        350.07,
                        357.588,
                        628.173,
                        1020.7574999999999,
                        1029.6615,
                        366.1875,
                        752.64,
                        632.1524999999999,
                        982.716,
                        356.78999999999996,
                        438.0285,
                        32.277,
                        500.8605,
                        461.328,
                        91.77,
                        272.664,
                        1672.125,
                        918.729,
                        628.929,
                        277.137,
                        803.628,
                        545.37
                    ]
                },
                {
                    "x-axis": "[\"1\\/12\\/2019\",\"1\\/13\\/2019\",\"1\\/14\\/2019\",\"1\\/15\\/2019\",\"1\\/18\\/2019\",\"1\\/19\\/2019\",\"1\\/24\\/2019\",\"1\\/25\\/2019\",\"1\\/31\\/2019\",\"1\\/4\\/2019\",\"1\\/7\\/2019\",\"2\\/1\\/2019\",\"2\\/10\\/2019\",\"2\\/12\\/2019\",\"2\\/13\\/2019\",\"2\\/14\\/2019\",\"2\\/17\\/2019\",\"2\\/18\\/2019\",\"2\\/21\\/2019\",\"2\\/25\\/2019\",\"2\\/26\\/2019\",\"2\\/28\\/2019\",\"2\\/7\\/2019\",\"2\\/9\\/2019\",\"3\\/12\\/2019\",\"3\\/14\\/2019\",\"3\\/15\\/2019\",\"3\\/19\\/2019\",\"3\\/2\\/2019\",\"3\\/25\\/2019\",\"3\\/29\\/2019\",\"3\\/3\\/2019\",\"3\\/8\\/2019\",\"3\\/9\\/2019\"]",
                    "y-axis": "[931.035,437.325,451.3635,575.316,138.1275,333.207,423.15,247.8735,511.0245,705.621,326.424,218.0115,119.259,246.4875,135.45,836.304,794.3775,65.604,298.116,885.402,571.41,722.232,276.948,334.845,226.2015,204.6975,241.458,881.0445,1011.8535,627.6165,121.128,1308.405,182.238,980.007]",
                    "lineLabels": "Electronic accessories Total Sales",
                    "data": [
                        931.035,
                        437.325,
                        451.3635,
                        575.316,
                        138.1275,
                        333.207,
                        423.15,
                        247.8735,
                        511.0245,
                        705.621,
                        326.424,
                        218.0115,
                        119.259,
                        246.4875,
                        135.45,
                        836.304,
                        794.3775,
                        65.604,
                        298.116,
                        885.402,
                        571.41,
                        722.232,
                        276.948,
                        334.845,
                        226.20149999999998,
                        204.6975,
                        241.458,
                        881.0445,
                        1011.8534999999999,
                        627.6165,
                        121.128,
                        1308.405,
                        182.238,
                        980.0070000000001
                    ]
                },
                {
                    "x-axis": "[\"1\\/1\\/2019\",\"1\\/10\\/2019\",\"1\\/16\\/2019\",\"1\\/17\\/2019\",\"1\\/19\\/2019\",\"1\\/20\\/2019\",\"1\\/21\\/2019\",\"1\\/22\\/2019\",\"1\\/23\\/2019\",\"1\\/25\\/2019\",\"1\\/26\\/2019\",\"1\\/27\\/2019\",\"1\\/28\\/2019\",\"1\\/4\\/2019\",\"1\\/5\\/2019\",\"1\\/6\\/2019\",\"1\\/7\\/2019\",\"2\\/1\\/2019\",\"2\\/10\\/2019\",\"2\\/11\\/2019\",\"2\\/15\\/2019\",\"2\\/18\\/2019\",\"2\\/2\\/2019\",\"2\\/24\\/2019\",\"2\\/3\\/2019\",\"2\\/5\\/2019\",\"2\\/8\\/2019\",\"3\\/10\\/2019\",\"3\\/11\\/2019\",\"3\\/13\\/2019\",\"3\\/14\\/2019\",\"3\\/15\\/2019\",\"3\\/16\\/2019\",\"3\\/18\\/2019\",\"3\\/20\\/2019\",\"3\\/21\\/2019\",\"3\\/22\\/2019\",\"3\\/23\\/2019\",\"3\\/24\\/2019\",\"3\\/27\\/2019\",\"3\\/3\\/2019\",\"3\\/5\\/2019\",\"3\\/6\\/2019\",\"3\\/7\\/2019\"]",
                    "y-axis": "[399.756,493.794,1003.59,91.056,548.7615,871.899,491.085,705.6315,198.996,252.042,107.31,25.263,293.202,373.17,560.238,494.76,432.663,763.4655,77.7735,242.676,680.9565,216.846,906.339,1123.479,697.368,163.233,195.174,688.6215,617.358,536.844,148.974,69.72,99.75,299.565,484.89,319.788,460.95,26.5545,78.603,93.114,1387.2495,521.01,642.474,297.906]",
                    "lineLabels": "Home and lifestyle Total Sales",
                    "data": [
                        399.756,
                        493.794,
                        1003.59,
                        91.056,
                        548.7615,
                        871.899,
                        491.085,
                        705.6315,
                        198.996,
                        252.042,
                        107.31,
                        25.263,
                        293.202,
                        373.17,
                        560.238,
                        494.76,
                        432.663,
                        763.4655,
                        77.7735,
                        242.676,
                        680.9565,
                        216.846,
                        906.339,
                        1123.479,
                        697.368,
                        163.233,
                        195.174,
                        688.6215,
                        617.358,
                        536.844,
                        148.974,
                        69.72,
                        99.75,
                        299.565,
                        484.89,
                        319.788,
                        460.95,
                        26.5545,
                        78.603,
                        93.114,
                        1387.2495,
                        521.01,
                        642.474,
                        297.906
                    ]
                },
                {
                    "x-axis": "[\"1\\/1\\/2019\",\"1\\/10\\/2019\",\"1\\/11\\/2019\",\"1\\/12\\/2019\",\"1\\/15\\/2019\",\"1\\/2\\/2019\",\"1\\/20\\/2019\",\"1\\/23\\/2019\",\"1\\/24\\/2019\",\"1\\/26\\/2019\",\"1\\/27\\/2019\",\"1\\/28\\/2019\",\"1\\/29\\/2019\",\"1\\/30\\/2019\",\"1\\/31\\/2019\",\"1\\/4\\/2019\",\"1\\/6\\/2019\",\"1\\/7\\/2019\",\"2\\/1\\/2019\",\"2\\/10\\/2019\",\"2\\/15\\/2019\",\"2\\/16\\/2019\",\"2\\/25\\/2019\",\"2\\/26\\/2019\",\"2\\/3\\/2019\",\"2\\/5\\/2019\",\"2\\/8\\/2019\",\"2\\/9\\/2019\",\"3\\/10\\/2019\",\"3\\/11\\/2019\",\"3\\/12\\/2019\",\"3\\/16\\/2019\",\"3\\/2\\/2019\",\"3\\/20\\/2019\",\"3\\/22\\/2019\",\"3\\/23\\/2019\",\"3\\/24\\/2019\",\"3\\/27\\/2019\",\"3\\/4\\/2019\",\"3\\/5\\/2019\",\"3\\/6\\/2019\",\"3\\/9\\/2019\"]",
                    "y-axis": "[457.443,865.305,183.036,419.832,590.436,44.5935,195.594,942.9,827.085,471.03,169.3125,1417.9095,120.645,160.44,224.4375,146.223,16.107,71.526,510.972,146.328,77.931,545.055,66.8745,57.1725,520.4115,34.629,1922.9805,233.52,328.755,471.6495,723.24,609.0,309.4035,462.21,391.419,162.75,130.0425,588.357,90.699,610.491,1100.4315,1201.3995]",
                    "lineLabels": "Sports and travel Total Sales",
                    "data": [
                        457.443,
                        865.305,
                        183.036,
                        419.832,
                        590.436,
                        44.5935,
                        195.594,
                        942.9,
                        827.085,
                        471.03,
                        169.3125,
                        1417.9095,
                        120.645,
                        160.44,
                        224.4375,
                        146.223,
                        16.107,
                        71.526,
                        510.972,
                        146.328,
                        77.931,
                        545.055,
                        66.8745,
                        57.1725,
                        520.4115,
                        34.629,
                        1922.9805000000001,
                        233.52,
                        328.755,
                        471.6495,
                        723.24,
                        609,
                        309.4035,
                        462.21,
                        391.419,
                        162.75,
                        130.0425,
                        588.357,
                        90.699,
                        610.491,
                        1100.4315,
                        1201.3995
                    ]
                },
                {
                    "x-axis": "[\"1\\/11\\/2019\",\"1\\/14\\/2019\",\"1\\/16\\/2019\",\"1\\/18\\/2019\",\"1\\/19\\/2019\",\"1\\/21\\/2019\",\"1\\/23\\/2019\",\"1\\/25\\/2019\",\"1\\/26\\/2019\",\"1\\/6\\/2019\",\"1\\/8\\/2019\",\"2\\/10\\/2019\",\"2\\/17\\/2019\",\"2\\/2\\/2019\",\"2\\/20\\/2019\",\"2\\/22\\/2019\",\"2\\/23\\/2019\",\"2\\/3\\/2019\",\"2\\/6\\/2019\",\"2\\/7\\/2019\",\"3\\/10\\/2019\",\"3\\/13\\/2019\",\"3\\/16\\/2019\",\"3\\/20\\/2019\",\"3\\/23\\/2019\",\"3\\/24\\/2019\",\"3\\/27\\/2019\",\"3\\/28\\/2019\",\"3\\/3\\/2019\",\"3\\/4\\/2019\",\"3\\/5\\/2019\",\"3\\/6\\/2019\"]",
                    "y-axis": "[235.683,536.991,881.307,166.236,685.776,248.5665,484.848,820.4385,724.8045,939.54,1359.036,234.0975,374.7975,554.9775,1076.2185,31.9305,337.512,671.79,606.6585,557.319,180.621,336.5565,829.71,90.825,631.6065,321.111,362.943,367.038,186.228,829.08,1032.045,456.288]",
                    "lineLabels": "Food and beverages Total Sales",
                    "data": [
                        235.683,
                        536.991,
                        881.307,
                        166.236,
                        685.7760000000001,
                        248.5665,
                        484.848,
                        820.4385,
                        724.8045,
                        939.54,
                        1359.036,
                        234.0975,
                        374.7975,
                        554.9775,
                        1076.2185,
                        31.9305,
                        337.512,
                        671.79,
                        606.6585,
                        557.319,
                        180.621,
                        336.5565,
                        829.71,
                        90.825,
                        631.6065,
                        321.111,
                        362.943,
                        367.038,
                        186.228,
                        829.08,
                        1032.045,
                        456.288
                    ]
                },
                {
                    "x-axis": "[\"1\\/11\\/2019\",\"1\\/12\\/2019\",\"1\\/13\\/2019\",\"1\\/15\\/2019\",\"1\\/16\\/2019\",\"1\\/23\\/2019\",\"1\\/25\\/2019\",\"1\\/26\\/2019\",\"1\\/29\\/2019\",\"1\\/5\\/2019\",\"1\\/7\\/2019\",\"1\\/8\\/2019\",\"1\\/9\\/2019\",\"2\\/10\\/2019\",\"2\\/11\\/2019\",\"2\\/12\\/2019\",\"2\\/13\\/2019\",\"2\\/15\\/2019\",\"2\\/18\\/2019\",\"2\\/2\\/2019\",\"2\\/21\\/2019\",\"2\\/25\\/2019\",\"2\\/28\\/2019\",\"2\\/6\\/2019\",\"2\\/8\\/2019\",\"2\\/9\\/2019\",\"3\\/1\\/2019\",\"3\\/10\\/2019\",\"3\\/13\\/2019\",\"3\\/17\\/2019\",\"3\\/19\\/2019\",\"3\\/2\\/2019\",\"3\\/20\\/2019\",\"3\\/22\\/2019\",\"3\\/23\\/2019\",\"3\\/25\\/2019\",\"3\\/26\\/2019\",\"3\\/28\\/2019\",\"3\\/5\\/2019\",\"3\\/7\\/2019\",\"3\\/9\\/2019\"]",
                    "y-axis": "[94.1745,189.0945,78.0045,154.392,53.928,94.185,307.4085,170.877,923.622,172.494,967.5225,299.8485,463.428,316.47,652.26,796.908,165.4485,535.374,284.193,400.764,323.211,494.1825,195.72,60.816,1074.486,472.311,742.2975,184.107,160.86,369.495,867.615,85.113,745.395,75.054,384.468,401.73,51.1455,95.6655,347.34,69.09,474.348]",
                    "lineLabels": "Fashion accessories Total Sales",
                    "data": [
                        94.1745,
                        189.0945,
                        78.0045,
                        154.392,
                        53.928,
                        94.185,
                        307.4085,
                        170.877,
                        923.6220000000001,
                        172.494,
                        967.5225,
                        299.8485,
                        463.428,
                        316.47,
                        652.26,
                        796.908,
                        165.4485,
                        535.374,
                        284.193,
                        400.764,
                        323.21099999999996,
                        494.1825,
                        195.72,
                        60.816,
                        1074.4859999999999,
                        472.311,
                        742.2975,
                        184.107,
                        160.86,
                        369.495,
                        867.615,
                        85.113,
                        745.395,
                        75.054,
                        384.468,
                        401.73,
                        51.1455,
                        95.6655,
                        347.34000000000003,
                        69.09,
                        474.348
                    ]
                }
            ],
            "chartTitle": "Total Sales by Date and Product Line"
        },
        "code": "import pandas as pd\nimport numpy as np\n\ndef read_and_prepare_data(csv_file_path):\n    # Read the CSV file\n    df = pd.read_csv(csv_file_path)\n\n    # Select columns for trend analysis\n    # Assuming we want to analyze the total sales by date and product line\n    selected_columns = ['Date', 'Total', 'Product line']\n\n    # Extract data for multiple line chart\n    data = []\n    for product_line in df['Product line'].unique():\n        product_line_df = df[df['Product line'] == product_line]\n        product_line_data = product_line_df.groupby('Date')['Total'].sum().reset_index()\n        data.append({\n            'x-axis': product_line_data['Date'],\n            'y-axis': product_line_data['Total'],\n            'lineLabels': f\"{product_line} Total Sales\",\n            'data': product_line_data['Total'].values.tolist()\n        })\n\n    # Create the result dictionary\n    result = {\n        'chartName': 'Total Sales by Date and Product Line',\n        'labels': [date for date in df['Date'].unique()],\n        'dataset': data,\n        'chartTitle': 'Total Sales by Date and Product Line'\n    }\n\n    return result\n\n# Call the function and store the result in the results variable\nresults = read_and_prepare_data(\"D:/AutoDash/app/csv/test-new.csv\")"
    },
    {
        "chartType": "SCATTER PLOT",
        "chartData": {
            "chartName": "Unit price vs Quantity",
            "labels": [
                74.69,
                15.28,
                46.33,
                58.22,
                86.31,
                85.39,
                68.84,
                73.56,
                36.26,
                54.84,
                14.48,
                25.51,
                46.95,
                43.19,
                71.38,
                93.72,
                68.93,
                72.61,
                54.67,
                40.3,
                86.04,
                87.98,
                33.2,
                34.56,
                88.63,
                52.59,
                33.52,
                87.67,
                88.36,
                24.89,
                94.13,
                78.07,
                83.78,
                96.58,
                99.42,
                68.12,
                62.62,
                60.88,
                54.92,
                30.12,
                86.72,
                56.11,
                69.12,
                98.7,
                15.37,
                93.96,
                56.69,
                20.01,
                18.93,
                82.63,
                91.4,
                44.59,
                17.87,
                15.43,
                16.16,
                85.98,
                44.34,
                89.6,
                72.35,
                30.61,
                24.74,
                55.73,
                55.07,
                15.81,
                75.74,
                15.87,
                33.47,
                97.61,
                78.77,
                18.33,
                89.48,
                62.12,
                48.52,
                75.91,
                74.67,
                41.65,
                49.04,
                20.01,
                78.31,
                20.38,
                99.19,
                96.68,
                19.25,
                80.36,
                48.91,
                83.06,
                76.52,
                49.38,
                42.47,
                76.99,
                47.38,
                44.86,
                21.98,
                64.36,
                89.75,
                97.16,
                87.87,
                12.45,
                52.75,
                82.7,
                48.71,
                78.55,
                23.07,
                58.26,
                30.35,
                88.67,
                27.38,
                62.13,
                33.98,
                81.97,
                16.49,
                98.21,
                72.84,
                58.07,
                80.79,
                27.02,
                21.94,
                51.36,
                10.96,
                53.44,
                99.56,
                57.12,
                99.96,
                63.91,
                56.47,
                93.69,
                32.25,
                31.73,
                68.54,
                90.28,
                39.62,
                92.13,
                34.84,
                87.45,
                81.3,
                90.22,
                26.31,
                34.42,
                51.91,
                72.5,
                89.8,
                90.5,
                68.6,
                30.41,
                77.95,
                46.26,
                30.14,
                66.14,
                71.86,
                32.46,
                91.54,
                34.56,
                83.24,
                16.48,
                80.97,
                92.29,
                72.17,
                50.28,
                97.22,
                93.39,
                43.18,
                63.69,
                45.79,
                76.4,
                39.9,
                42.57,
                95.58,
                98.98,
                51.28,
                69.52,
                70.01,
                80.05,
                20.85,
                52.89,
                19.79,
                33.84,
                22.17,
                22.51,
                73.88,
                86.8,
                64.26,
                38.47,
                15.5,
                34.31,
                12.34,
                18.08,
                94.49,
                46.47,
                74.07,
                69.81,
                77.04,
                73.52,
                87.8,
                25.55,
                32.71,
                74.29,
                43.7,
                25.29,
                41.5,
                71.39,
                19.15,
                57.49,
                61.41,
                25.9,
                17.77,
                23.03,
                66.65,
                28.53,
                30.37,
                99.73,
                26.23,
                93.26,
                92.36,
                46.42,
                29.61,
                18.28,
                24.77,
                94.64,
                94.87,
                57.34,
                45.35,
                62.08,
                11.81,
                12.54,
                43.25,
                87.16,
                69.37,
                37.06,
                90.7,
                63.42,
                81.37,
                10.59,
                84.09,
                73.82,
                51.94,
                93.14,
                17.41,
                44.22,
                13.22,
                89.69,
                24.94,
                59.77,
                93.2,
                62.65,
                93.87,
                47.59,
                81.4,
                17.94,
                77.72,
                73.06,
                46.55,
                35.19,
                14.39,
                23.75,
                58.9,
                32.62,
                66.35,
                25.91,
                32.25,
                65.94,
                75.06,
                16.45,
                38.3,
                22.24,
                54.45,
                98.4,
                35.47,
                74.6,
                70.74,
                35.54,
                67.43,
                21.12,
                21.54,
                12.03,
                99.71,
                47.97,
                21.82,
                95.42,
                70.99,
                44.02,
                69.96,
                37,
                15.34,
                99.83,
                47.67,
                66.68,
                74.86,
                23.75,
                48.51,
                94.88,
                40.3,
                27.85,
                62.48,
                36.36,
                18.11,
                51.92,
                28.84,
                78.38,
                60.01
            ],
            "dataset": [
                {
                    "x-axis": [
                        7,
                        5,
                        7,
                        8,
                        7,
                        7,
                        6,
                        10,
                        2,
                        3,
                        4,
                        4,
                        5,
                        10,
                        10,
                        6,
                        7,
                        6,
                        3,
                        2,
                        5,
                        3,
                        2,
                        5,
                        3,
                        8,
                        1,
                        2,
                        5,
                        9,
                        5,
                        9,
                        8,
                        2,
                        4,
                        1,
                        5,
                        9,
                        8,
                        8,
                        1,
                        2,
                        6,
                        8,
                        2,
                        4,
                        9,
                        9,
                        6,
                        10,
                        7,
                        5,
                        4,
                        1,
                        2,
                        8,
                        2,
                        8,
                        10,
                        6,
                        3,
                        6,
                        9,
                        10,
                        4,
                        10,
                        2,
                        6,
                        10,
                        1,
                        10,
                        10,
                        3,
                        6,
                        9,
                        10,
                        9,
                        9,
                        10,
                        5,
                        6,
                        3,
                        8,
                        4,
                        5,
                        7,
                        5,
                        7,
                        1,
                        6,
                        4,
                        10,
                        7,
                        9,
                        1,
                        1,
                        10,
                        6,
                        3,
                        6,
                        1,
                        9,
                        9,
                        6,
                        7,
                        10,
                        6,
                        6,
                        9,
                        10,
                        2,
                        3,
                        7,
                        9,
                        9,
                        3,
                        5,
                        1,
                        10,
                        2,
                        8,
                        7,
                        9,
                        8,
                        8,
                        7,
                        5,
                        9,
                        8,
                        9,
                        7,
                        6,
                        4,
                        6,
                        6,
                        3,
                        5,
                        6,
                        10,
                        8,
                        10,
                        10,
                        10,
                        1,
                        6,
                        6,
                        10,
                        4,
                        8,
                        8,
                        4,
                        7,
                        9,
                        6,
                        8,
                        5,
                        1,
                        5,
                        9,
                        6,
                        8,
                        1,
                        7,
                        2,
                        10,
                        8,
                        10,
                        10,
                        6,
                        7,
                        5,
                        5,
                        8,
                        6,
                        8,
                        9,
                        8,
                        7,
                        6,
                        3,
                        7,
                        8,
                        10,
                        8,
                        7,
                        3,
                        8,
                        4,
                        1,
                        4,
                        3,
                        2,
                        9,
                        4,
                        5,
                        1,
                        2,
                        1,
                        4,
                        5,
                        6,
                        4,
                        7,
                        10,
                        5,
                        9,
                        9,
                        10,
                        3,
                        9,
                        9,
                        9,
                        5,
                        3,
                        7,
                        1,
                        5,
                        3,
                        8,
                        3,
                        6,
                        7,
                        5,
                        1,
                        2,
                        2,
                        9,
                        4,
                        6,
                        8,
                        2,
                        3,
                        9,
                        4,
                        10,
                        2,
                        5,
                        5,
                        5,
                        1,
                        9,
                        2,
                        2,
                        4,
                        8,
                        8,
                        3,
                        5,
                        4,
                        7,
                        9,
                        10,
                        2,
                        4,
                        8,
                        4,
                        1,
                        6,
                        4,
                        4,
                        9,
                        4,
                        4,
                        10,
                        1,
                        7,
                        4,
                        10,
                        4,
                        10,
                        5,
                        2,
                        9,
                        2,
                        6,
                        7,
                        10,
                        4,
                        10,
                        10,
                        8,
                        1,
                        1,
                        6,
                        4,
                        5,
                        1,
                        9,
                        7,
                        7,
                        10,
                        7,
                        1,
                        2,
                        10,
                        5,
                        4,
                        6,
                        4
                    ],
                    "y-axis": [
                        7,
                        5,
                        7,
                        8,
                        7,
                        7,
                        6,
                        10,
                        2,
                        3,
                        4,
                        4,
                        5,
                        10,
                        10,
                        6,
                        7,
                        6,
                        3,
                        2,
                        5,
                        3,
                        2,
                        5,
                        3,
                        8,
                        1,
                        2,
                        5,
                        9,
                        5,
                        9,
                        8,
                        2,
                        4,
                        1,
                        5,
                        9,
                        8,
                        8,
                        1,
                        2,
                        6,
                        8,
                        2,
                        4,
                        9,
                        9,
                        6,
                        10,
                        7,
                        5,
                        4,
                        1,
                        2,
                        8,
                        2,
                        8,
                        10,
                        6,
                        3,
                        6,
                        9,
                        10,
                        4,
                        10,
                        2,
                        6,
                        10,
                        1,
                        10,
                        10,
                        3,
                        6,
                        9,
                        10,
                        9,
                        9,
                        10,
                        5,
                        6,
                        3,
                        8,
                        4,
                        5,
                        7,
                        5,
                        7,
                        1,
                        6,
                        4,
                        10,
                        7,
                        9,
                        1,
                        1,
                        10,
                        6,
                        3,
                        6,
                        1,
                        9,
                        9,
                        6,
                        7,
                        10,
                        6,
                        6,
                        9,
                        10,
                        2,
                        3,
                        7,
                        9,
                        9,
                        3,
                        5,
                        1,
                        10,
                        2,
                        8,
                        7,
                        9,
                        8,
                        8,
                        7,
                        5,
                        9,
                        8,
                        9,
                        7,
                        6,
                        4,
                        6,
                        6,
                        3,
                        5,
                        6,
                        10,
                        8,
                        10,
                        10,
                        10,
                        1,
                        6,
                        6,
                        10,
                        4,
                        8,
                        8,
                        4,
                        7,
                        9,
                        6,
                        8,
                        5,
                        1,
                        5,
                        9,
                        6,
                        8,
                        1,
                        7,
                        2,
                        10,
                        8,
                        10,
                        10,
                        6,
                        7,
                        5,
                        5,
                        8,
                        6,
                        8,
                        9,
                        8,
                        7,
                        6,
                        3,
                        7,
                        8,
                        10,
                        8,
                        7,
                        3,
                        8,
                        4,
                        1,
                        4,
                        3,
                        2,
                        9,
                        4,
                        5,
                        1,
                        2,
                        1,
                        4,
                        5,
                        6,
                        4,
                        7,
                        10,
                        5,
                        9,
                        9,
                        10,
                        3,
                        9,
                        9,
                        9,
                        5,
                        3,
                        7,
                        1,
                        5,
                        3,
                        8,
                        3,
                        6,
                        7,
                        5,
                        1,
                        2,
                        2,
                        9,
                        4,
                        6,
                        8,
                        2,
                        3,
                        9,
                        4,
                        10,
                        2,
                        5,
                        5,
                        5,
                        1,
                        9,
                        2,
                        2,
                        4,
                        8,
                        8,
                        3,
                        5,
                        4,
                        7,
                        9,
                        10,
                        2,
                        4,
                        8,
                        4,
                        1,
                        6,
                        4,
                        4,
                        9,
                        4,
                        4,
                        10,
                        1,
                        7,
                        4,
                        10,
                        4,
                        10,
                        5,
                        2,
                        9,
                        2,
                        6,
                        7,
                        10,
                        4,
                        10,
                        10,
                        8,
                        1,
                        1,
                        6,
                        4,
                        5,
                        1,
                        9,
                        7,
                        7,
                        10,
                        7,
                        1,
                        2,
                        10,
                        5,
                        4,
                        6,
                        4
                    ]
                }
            ],
            "chartTitle": "Trend Analysis of Unit price vs Quantity"
        },
        "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef process_csv(csv_path):\n    # Read the CSV file from the given path\n    df = pd.read_csv(csv_path)\n\n    # Select columns for trend analysis\n    # For this example, let's assume we want to analyze the relationship between Unit Price and Quantity\n    x_axis = 'Unit price'\n    y_axis = 'Quantity'\n\n    # Extract data for a single Scatter Plot\n    data = df[[x_axis, y_axis]].values.tolist()\n    labels = [i[0] for i in data]\n    values = [i[1] for i in data]\n\n    # Return the data in the required format\n    result = {\n        \"chartName\": f\"{x_axis} vs {y_axis}\",\n        \"labels\": labels,\n        \"dataset\": [\n            {\n                \"x-axis\": values,\n                \"y-axis\": values\n            }\n        ],\n        \"chartTitle\": f\"Trend Analysis of {x_axis} vs {y_axis}\"\n    }\n    return result\n\n# Call the function with the CSV path\ncsv_path = \"D:/AutoDash/app/csv/test-new.csv\"\nresults = process_csv(csv_path)\n\n# Print the result\nprint(results)"
    }
]);
  const [isDataFetched, setIsDataFetched] = useState(true);

  const handleFileInput = (e) => {
    console.log(e.target.files[0]);
    setFileInput1(e.target.files[0]);
  };
  const fetchChartData = async () => {
    setIsDataFetched(false);
    const response = await fetch(`${process.env.PYTHON_URI}/generate_charts`, {
      method: "POST",
      headers: {
        "Content-Type": fileInput1 ? "multipart/form-data" : "application/json",
      },
    });
    const data = await response.json();
    setIsDataFetched(true);
    setpageNo(2);
    if (!data) return;
    if (response.status !== 200) return console.log("Error fetching data");

    console.log("data fetched", data);
    setGeneratedChartData(data);
    return data;
  };

  // useEffect(() => {
  //   fetchChartData();
  // }, []);

  return (
    <>
      {pageNo == 0 && (
        <>
          {/* upload csv or connect with mysql option */}
          <div className="flex flex-wrap gap-4 mb-8">
            <button
              className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white"
              onClick={() => setOpenCSVUploader(true)}
            >
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only"> Upload CSV</span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">Connect with MySQL</span>
            </button>
          </div>
          <Backdrop
            sx={{
              color: "#fff",
              zIndex: (theme) => theme.zIndex.drawer + 1,
            }}
            open={openCSVUploader}
            onClick={(e) => {
              if (!e) return;
              if (!e.target.className.startsWith) return;
              if (!e.target.className.startsWith("MuiBackdrop-root")) return;
              setOpenCSVUploader(false);
            }}
          >
            <div className="flex flex-col items-center justify-center h-screen">
              {/* click here to upload file or drag and drop a file*/}
              <div className="bg-white p7 rounded mx-auto">
                <div
                  x-data="dataFileDnD()"
                  className="relative flex flex-col p-4 text-gray-400 border border-gray-500 rounded ml-4 mr-4 mt-4"
                >
                  {fileInput1 ? (
                    <>{fileInput1?.name} uploaded successfully</>
                  ) : (
                    <div
                      x-ref="dnd"
                      className="relative flex flex-col text-gray-400 border-dashed rounded cursor-pointer"
                    >
                      <input
                        accept="*"
                        type="file"
                        multiple
                        className="absolute inset-0 z-50 w-full h-full p-0 m-0 outline-none opacity-0 cursor-pointer"
                        title=""
                        onChange={handleFileInput}
                      />

                      <div className="flex flex-col items-center justify-center py-10 text-center">
                        <svg
                          className="w-6 h-6 mr-1 text-current-50"
                          xmlns="http://www.w3.org/2000/svg"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                          />
                        </svg>
                        <p className="m-0">
                          Drag your files here or click in this area.
                        </p>
                      </div>
                    </div>
                  )}
                </div>
                {/* next  button */}
                <div style={{ display: "flex" }}>
                  <button
                    className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white"
                    onClick={() => {
                      setpageNo(1);
                      setIsDataFetched(false);
                      // fetchChartData();
                      setTimeout(() => {
                        setIsDataFetched(true);
                        setpageNo(2);
                      }, 15000);
                    }}
                    style={{
                      marginTop: "20px",
                      marginBottom: "20px",
                      marginLeft: "auto",
                      marginRight: "auto",
                    }}
                  >
                    {" "}
                    Next{" "}
                  </button>
                </div>
              </div>
            </div>
          </Backdrop>
        </>
      )}
      {!isDataFetched && (
        <>
          <LoaderComponent />
        </>
      )}

      {/* Cards */}
      {pageNo == 2 && generatedChartData && (
        <div className="grid grid-cols-12 gap-6">
          {generatedChartData.map((chart, index) => {
            console.log(chart.chartType);
            console.log(chart.chartData);
            if (chart.chartType === "BAR CHART" && chart.chartData) {
              return (
                <DashboardCard04
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (chart.chartType === "PIE CHART" && chart.chartData) {
              return (
                <DashboardCard16
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (
              chart.chartType === "LINE CHART SINGLE" &&
              chart.chartData
            ) {
              return (
                <DashboardCard02
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (
              chart.chartType === "LINE CHART MULTIPLE" &&
              chart.chartData
            ) {
              return (
                <DashboardCard03
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (chart.chartType === "SCATTER PLOT" && chart.chartData) {
              return <></>;
              return (
                <DashboardCard14
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            }
          })}
          {/* <DashboardCard06 /> */}
          {/* Line chart (Acme Plus) */}
          {/* <DashboardCard01 /> */}
          {/* Doughnut chart (Top Countries) */}
          {/* <DashboardCard16 /> */}
          {/* Line chart (Acme Professional) */}
          {/* <DashboardCard03 /> */}
          {/* Bar chart (Direct vs Indirect) */}
          {/* <DashboardCard04 /> */}
          {/* Line chart (Real Time Value) */}
          {/* <DashboardCard05 /> */}

          {/* Line chart (Acme Advanced) */}
          {/* <DashboardCard02 /> */}
          {/* Table (Top Channels) */}
          {/* <DashboardCard07 /> */}
          {/* Line chart (Sales Over Time) */}
          {/* <DashboardCard08 /> */}
          {/* Stacked bar chart (Sales VS Refunds) */}
          {/* <DashboardCard09 /> */}
          {/* Card (Customers) */}
          {/* <DashboardCard10 /> */}
          {/* Card (Reasons for Refunds) */}
          {/* <DashboardCard11 /> */}
          {/* Card (Recent Activity) */}
          {/* <DashboardCard12 /> */}
          {/* Card (Income/Expenses) */}
          {/* <DashboardCard13 /> */}
        </div>
      )}
    </>
  );
};

export default DashboardCreator;
