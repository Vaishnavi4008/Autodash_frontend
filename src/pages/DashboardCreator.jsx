import React, {useEffect, useState} from "react";
import DashboardCard01 from "../partials/dashboard/DashboardCard01";
import DashboardCard02 from "../partials/dashboard/DashboardCard02";
import DashboardCard03 from "../partials/dashboard/DashboardCard03";
import DashboardCard04 from "../partials/dashboard/DashboardCard04";
import DashboardCard05 from "../partials/dashboard/DashboardCard05";
import DashboardCard06 from "../partials/dashboard/DashboardCard06";
import DashboardCard07 from "../partials/dashboard/DashboardCard07";
import DashboardCard08 from "../partials/dashboard/DashboardCard08";
import DashboardCard09 from "../partials/dashboard/DashboardCard09";
import DashboardCard10 from "../partials/dashboard/DashboardCard10";
import DashboardCard11 from "../partials/dashboard/DashboardCard11";
import DashboardCard12 from "../partials/dashboard/DashboardCard12";
import DashboardCard13 from "../partials/dashboard/DashboardCard13";
import DashboardCard14 from "../partials/dashboard/DashboardCard14";
import DashboardCard15 from "../partials/dashboard/DashboardCard15";
import DashboardCard16 from "../partials/dashboard/DashboardCard16";

import Backdrop from "@mui/material/Backdrop";
import CircularProgress from "@mui/material/CircularProgress";
import LoaderComponent from "./Loader";

const DashboardCreator = ({pageNo}) => {
  const [openCSVUploader, setOpenCSVUploader] = useState(false);
  const [prompt, setPrompt] = useState("");
  const [promptResult, setPromptResult] = useState(<></>);
  const [fileInput1, setFileInput1] = useState("");
  const [fileInput2, setFileInput2] = useState("");
  const [generatedChartData, setGeneratedChartData] = useState(
    [
      // {
      //     "chartType": "BAR CHART",
      //     "chartData": null,
      //     "code": "import pandas as pd\n\ndef extract_attribute_data(csv_path):\n    # Read the CSV file\n    df = pd.read_csv(csv_path)\n\n    # Extract the attribute columns\n    attribute_cols = ['Branch', 'City', 'Customer type', 'Gender', 'Product line']\n    attribute_data = df[attribute_cols].to_dict('records')\n\n    # Create the result dictionary\n    result = {\n        'labels': [],\n        'dataset': [],\n        'chartTitle': 'Attribute Distribution'\n    }\n\n    # Iterate over the attribute data and create the dataset\n    for row in attribute_data:\n        category = f\"{row['Branch']} - {row['City']} - {row['Customer type']} - {row['Gender']} - {row['Product line']}\"\n        value = 1  # Assuming each attribute value should be counted as 1\n        result['dataset'].append({'barLabel': category, 'data': [value]})\n\n    return result"
      // },
      // {
      //     "chartType": "PIE CHART",
      //     "chartData": null,
      //     "code": "import pandas as pd\n\ndef read_csv_and_extract_data(path):\n    # Read the CSV file\n    df = pd.read_csv(path)\n\n    # Extract the desired columns\n    cols = ['Branch', 'City', 'Customer type', 'Gender', 'Product line', 'Unit price', 'Quantity', 'Tax 5%', 'Total', 'Date', 'Time', 'Payment']\n    data = df[cols].to_dict('records')\n\n    # Extract the desired data\n    results = []\n    for row in data:\n        label = f\"{row['Branch']} - {row['Customer type']} - {row['Product line']}\"\n        value = float(row['Total'])\n        results.append((label, value))\n\n    # Calculate some descriptive statistics\n    total_revenue = sum([row[1] for row in results])\n    average_revenue = sum([row[1] for row in results]) / len(results)\n\n    # Return the results\n    return {\n        'labels': [row[0] for row in results],\n        'data': [row[1] for row in results],\n        'chartTitle': 'Revenue by Branch, Customer Type, and Product Line'\n    }"
      // },
      // {
      //     "chartType": "LINE CHART SINGLE",
      //     "chartData": {
      //         "labels": [
      //           548.9715,
      //           80.22,
      //           340.5255,
      //           489.048,
      //           634.3785,
      //           627.6165,
      //           433.692,
      //           772.38,
      //           76.146,
      //           172.746,
      //           60.816,
      //           107.142,
      //           246.4875,
      //           453.495,
      //           749.49,
      //           590.436,
      //           506.6355,
      //           457.443,
      //           172.2105,
      //           84.63,
      //           451.71,
      //           277.137,
      //           69.72,
      //           181.44,
      //           279.1845,
      //           441.756,
      //           35.196,
      //           184.107,
      //           463.89,
      //           235.2105,
      //           494.1825,
      //           737.7615,
      //           703.752,
      //           202.818,
      //           417.564,
      //           71.526,
      //           328.755,
      //           575.316,
      //           461.328,
      //           253.008,
      //           91.056,
      //           117.831,
      //           435.456,
      //           829.08,
      //           32.277,
      //           394.632,
      //           535.7205,
      //           189.0945,
      //           119.259,
      //           867.615,
      //           671.79,
      //           234.0975,
      //           75.054,
      //           16.2015,
      //           33.936,
      //           722.232,
      //           93.114,
      //           752.64,
      //           759.675,
      //           192.843,
      //           77.931,
      //           351.099,
      //           520.4115,
      //           166.005,
      //           318.108,
      //           166.635,
      //           70.287,
      //           614.943,
      //           827.085,
      //           19.2465,
      //           939.54,
      //           652.26,
      //           152.838,
      //           478.233,
      //           705.6315,
      //           437.325,
      //           463.428,
      //           189.0945,
      //           822.255,
      //           106.995,
      //           624.897,
      //           304.542,
      //           161.7,
      //           337.512,
      //           256.7775,
      //           610.491,
      //           401.73,
      //           362.943,
      //           44.5935,
      //           485.037,
      //           198.996,
      //           471.03,
      //           161.553,
      //           608.202,
      //           94.2375,
      //           102.018,
      //           922.635,
      //           78.435,
      //           166.1625,
      //           521.01,
      //           51.1455,
      //           742.2975,
      //           218.0115,
      //           367.038,
      //           223.0725,
      //           931.035,
      //           172.494,
      //           391.419,
      //           321.111,
      //           860.685,
      //           34.629,
      //           309.3615,
      //           535.374,
      //           548.7615,
      //           763.4655,
      //           85.113,
      //           115.185,
      //           53.928,
      //           115.08,
      //           112.224,
      //           836.304,
      //           419.832,
      //           944.622,
      //           536.844,
      //           474.348,
      //           688.6215,
      //           169.3125,
      //           299.8485,
      //           575.736,
      //           853.146,
      //           291.207,
      //           580.419,
      //           146.328,
      //           550.935,
      //           512.19,
      //           284.193,
      //           138.1275,
      //           216.846,
      //           545.055,
      //           609,
      //           942.9,
      //           950.25,
      //           720.3,
      //           31.9305,
      //           491.085,
      //           291.438,
      //           316.47,
      //           277.788,
      //           603.624,
      //           272.664,
      //           384.468,
      //           254.016,
      //           786.618,
      //           103.824,
      //           680.148,
      //           484.5225,
      //           75.7785,
      //           263.97,
      //           918.729,
      //           588.357,
      //           362.712,
      //           66.8745,
      //           336.5565,
      //           160.44,
      //           418.95,
      //           357.588,
      //           1003.59,
      //           1039.29,
      //           323.064,
      //           510.972,
      //           367.5525,
      //           420.2625,
      //           175.14,
      //           333.207,
      //           166.236,
      //           319.788,
      //           186.228,
      //           165.4485,
      //           465.444,
      //           273.42,
      //           472.311,
      //           323.148,
      //           162.75,
      //           288.204,
      //           90.699,
      //           56.952,
      //           793.716,
      //           195.174,
      //           77.7735,
      //           293.202,
      //           242.676,
      //           154.392,
      //           829.71,
      //           107.31,
      //           171.7275,
      //           78.0045,
      //           91.77,
      //           26.5545,
      //           174.3,
      //           374.7975,
      //           120.645,
      //           241.458,
      //           451.3635,
      //           271.95,
      //           93.2925,
      //           217.6335,
      //           629.8425,
      //           299.565,
      //           95.6655,
      //           942.4485,
      //           247.8735,
      //           881.307,
      //           484.89,
      //           146.223,
      //           217.6335,
      //           19.194,
      //           130.0425,
      //           298.116,
      //           796.908,
      //           180.621,
      //           285.705,
      //           456.288,
      //           62.0025,
      //           13.167,
      //           90.825,
      //           183.036,
      //           655.5465,
      //           155.652,
      //           571.41,
      //           532.728,
      //           170.877,
      //           33.3585,
      //           794.6505,
      //           310.044,
      //           545.37,
      //           195.594,
      //           91.4025,
      //           232.155,
      //           69.405,
      //           94.1745,
      //           235.683,
      //           125.517,
      //           195.72,
      //           263.13,
      //           788.508,
      //           399.756,
      //           256.41,
      //           94.185,
      //           326.424,
      //           536.991,
      //           439.8975,
      //           369.495,
      //           30.219,
      //           99.75,
      //           494.76,
      //           137.004,
      //           69.6675,
      //           163.233,
      //           135.45,
      //           276.948,
      //           709.317,
      //           69.09,
      //           160.86,
      //           233.52,
      //           57.1725,
      //           723.24,
      //           148.974,
      //           783.3,
      //           297.108,
      //           373.17,
      //           354.0075,
      //           44.352,
      //           203.553,
      //           25.263,
      //           628.173,
      //           352.5795,
      //           229.11,
      //           400.764,
      //           745.395,
      //           462.21,
      //           587.664,
      //           38.85,
      //           16.107,
      //           628.929,
      //           200.214,
      //           350.07,
      //           78.603,
      //           224.4375,
      //           356.5485,
      //           697.368,
      //           423.15,
      //           204.6975,
      //           65.604,
      //           76.356,
      //           190.155,
      //           272.58,
      //           121.128,
      //           493.794,
      //           252.042
      //         ],
      //         "dataset": [
      //             {
      //                 "x-axis": "Date",
      //                 "y-axis": "Total",
      //                 "lineLabel": "Total Sales",
      //                 "data": [
      //                     548.9715,
      //                     80.22,
      //                     340.5255,
      //                     489.048,
      //                     634.3785,
      //                     627.6165,
      //                     433.692,
      //                     772.38,
      //                     76.146,
      //                     172.746,
      //                     60.816,
      //                     107.142,
      //                     246.4875,
      //                     453.495,
      //                     749.49,
      //                     590.436,
      //                     506.6355,
      //                     457.443,
      //                     172.2105,
      //                     84.63,
      //                     451.71,
      //                     277.137,
      //                     69.72,
      //                     181.44,
      //                     279.1845,
      //                     441.756,
      //                     35.196,
      //                     184.107,
      //                     463.89,
      //                     235.2105,
      //                     494.1825,
      //                     737.7615,
      //                     703.752,
      //                     202.818,
      //                     417.564,
      //                     71.526,
      //                     328.755,
      //                     575.316,
      //                     461.328,
      //                     253.008,
      //                     91.056,
      //                     117.831,
      //                     435.456,
      //                     829.08,
      //                     32.277,
      //                     394.632,
      //                     535.7205,
      //                     189.0945,
      //                     119.259,
      //                     867.615,
      //                     671.79,
      //                     234.0975,
      //                     75.054,
      //                     16.2015,
      //                     33.936,
      //                     722.232,
      //                     93.114,
      //                     752.64,
      //                     759.675,
      //                     192.843,
      //                     77.931,
      //                     351.099,
      //                     520.4115,
      //                     166.005,
      //                     318.108,
      //                     166.635,
      //                     70.287,
      //                     614.943,
      //                     827.085,
      //                     19.2465,
      //                     939.54,
      //                     652.26,
      //                     152.838,
      //                     478.233,
      //                     705.6315,
      //                     437.325,
      //                     463.428,
      //                     189.0945,
      //                     822.255,
      //                     106.995,
      //                     624.897,
      //                     304.542,
      //                     161.7,
      //                     337.512,
      //                     256.7775,
      //                     610.491,
      //                     401.73,
      //                     362.943,
      //                     44.5935,
      //                     485.037,
      //                     198.996,
      //                     471.03,
      //                     161.553,
      //                     608.202,
      //                     94.2375,
      //                     102.018,
      //                     922.635,
      //                     78.435,
      //                     166.1625,
      //                     521.01,
      //                     51.1455,
      //                     742.2975,
      //                     218.0115,
      //                     367.038,
      //                     223.0725,
      //                     931.035,
      //                     172.494,
      //                     391.419,
      //                     321.111,
      //                     860.685,
      //                     34.629,
      //                     309.3615,
      //                     535.374,
      //                     548.7615,
      //                     763.4655,
      //                     85.113,
      //                     115.185,
      //                     53.928,
      //                     115.08,
      //                     112.224,
      //                     836.304,
      //                     419.832,
      //                     944.622,
      //                     536.844,
      //                     474.348,
      //                     688.6215,
      //                     169.3125,
      //                     299.8485,
      //                     575.736,
      //                     853.146,
      //                     291.207,
      //                     580.419,
      //                     146.328,
      //                     550.935,
      //                     512.19,
      //                     284.193,
      //                     138.1275,
      //                     216.846,
      //                     545.055,
      //                     609,
      //                     942.9,
      //                     950.25,
      //                     720.3,
      //                     31.9305,
      //                     491.085,
      //                     291.438,
      //                     316.47,
      //                     277.788,
      //                     603.624,
      //                     272.664,
      //                     384.468,
      //                     254.016,
      //                     786.618,
      //                     103.824,
      //                     680.148,
      //                     484.5225,
      //                     75.7785,
      //                     263.97,
      //                     918.729,
      //                     588.357,
      //                     362.712,
      //                     66.8745,
      //                     336.5565,
      //                     160.44,
      //                     418.95,
      //                     357.588,
      //                     1003.59,
      //                     1039.29,
      //                     323.064,
      //                     510.972,
      //                     367.5525,
      //                     420.2625,
      //                     175.14,
      //                     333.207,
      //                     166.236,
      //                     319.788,
      //                     186.228,
      //                     165.4485,
      //                     465.444,
      //                     273.42,
      //                     472.311,
      //                     323.148,
      //                     162.75,
      //                     288.204,
      //                     90.699,
      //                     56.952,
      //                     793.716,
      //                     195.174,
      //                     77.7735,
      //                     293.202,
      //                     242.676,
      //                     154.392,
      //                     829.71,
      //                     107.31,
      //                     171.7275,
      //                     78.0045,
      //                     91.77,
      //                     26.5545,
      //                     174.3,
      //                     374.7975,
      //                     120.645,
      //                     241.458,
      //                     451.3635,
      //                     271.95,
      //                     93.2925,
      //                     217.6335,
      //                     629.8425,
      //                     299.565,
      //                     95.6655,
      //                     942.4485,
      //                     247.8735,
      //                     881.307,
      //                     484.89,
      //                     146.223,
      //                     217.6335,
      //                     19.194,
      //                     130.0425,
      //                     298.116,
      //                     796.908,
      //                     180.621,
      //                     285.705,
      //                     456.288,
      //                     62.0025,
      //                     13.167,
      //                     90.825,
      //                     183.036,
      //                     655.5465,
      //                     155.652,
      //                     571.41,
      //                     532.728,
      //                     170.877,
      //                     33.3585,
      //                     794.6505,
      //                     310.044,
      //                     545.37,
      //                     195.594,
      //                     91.4025,
      //                     232.155,
      //                     69.405,
      //                     94.1745,
      //                     235.683,
      //                     125.517,
      //                     195.72,
      //                     263.13,
      //                     788.508,
      //                     399.756,
      //                     256.41,
      //                     94.185,
      //                     326.424,
      //                     536.991,
      //                     439.8975,
      //                     369.495,
      //                     30.219,
      //                     99.75,
      //                     494.76,
      //                     137.004,
      //                     69.6675,
      //                     163.233,
      //                     135.45,
      //                     276.948,
      //                     709.317,
      //                     69.09,
      //                     160.86,
      //                     233.52,
      //                     57.1725,
      //                     723.24,
      //                     148.974,
      //                     783.3,
      //                     297.108,
      //                     373.17,
      //                     354.0075,
      //                     44.352,
      //                     203.553,
      //                     25.263,
      //                     628.173,
      //                     352.5795,
      //                     229.11,
      //                     400.764,
      //                     745.395,
      //                     462.21,
      //                     587.664,
      //                     38.85,
      //                     16.107,
      //                     628.929,
      //                     200.214,
      //                     350.07,
      //                     78.603,
      //                     224.4375,
      //                     356.5485,
      //                     697.368,
      //                     423.15,
      //                     204.6975,
      //                     65.604,
      //                     76.356,
      //                     190.155,
      //                     272.58,
      //                     121.128,
      //                     493.794,
      //                     252.042
      //                 ]
      //             }
      //         ],
      //         "chartTitle": "Total Sales by Date"
      //     },
      //     "code": "import pandas as pd\nimport csv\n\ndef read_csv_and_generate_data(csv_path):\n    # Read the CSV file\n    df = pd.read_csv(csv_path)\n    \n    # Extract the data for a single line chart\n    data = df[[\"Date\", \"Total\"]].values.tolist()\n    \n    # Create the result dictionary\n    result = {\n        \"labels\": [x[0] for x in data],  # Array of Strings (describes each element of dataset.data)\n        \"dataset\": [\n            {\n                \"x-axis\": \"Date\",  # should contain the label of the x axis for the chart\n                \"y-axis\": \"Total\",  # should contain the label of the y axis for the chart\n                \"lineLabel\": \"Total Sales\",  # Line Description a single string describes the data in the data\n                \"data\": [x[1] for x in data]  # Array of numbers\n            }\n        ],\n        \"chartTitle\": \"Total Sales by Date\"\n    }\n    \n    return result\n\n# Call the function and store the result in the \"results\" variable\ncsv_path = \"D:/AutoDash/app/csv/test-new.csv\"\nresults = read_csv_and_generate_data(csv_path)"
      // },
      // {
      //     "chartType": "LINE CHART MULTIPLE",
      //     "chartData": null,
      //     "code": "import pandas as pd\nimport matplotlib.pyplot as plt\n\ndef read_csv_and_plot(path_to_csv_file):\n    # Read the CSV file\n    df = pd.read_csv(path_to_csv_file)\n\n    # Define the attribute columns for the chart\n    x_axis = 'Date'\n    line_labels = ['Health and beauty', 'Electronic accessories', 'Home and lifestyle', 'Sports and travel']\n\n    # Extract the data for the chart\n    data = df.groupby(x_axis)[['Unit price', 'Quantity']].sum().reset_index()\n    data['Unit price'] = data['Unit price'] * data['Quantity']\n    data = data.rename(columns={'Unit price': 'Total'})\n\n    # Create the plot\n    fig, ax = plt.subplots()\n    for line_label, group in data.groupby('Date'):\n        ax.plot(group[x_axis], group['Total'], label=line_label)\n\n    # Format the plot\n    ax.set_xlabel(x_axis)\n    ax.set_ylabel('Total')\n    ax.set_title('Sales by Date and Product Line')\n    ax.legend(title='Product Line')\n\n    # Convert the plot to the desired format\n    result = {\n        'labels': data[x_axis].tolist(),\n        'dataset': [\n            {\n                'x-axis': x_axis,\n                'y-axis': 'Total',\n                'lineLabels': line_labels[0],\n                'data': data.loc[data[x_axis] == line_labels[0], 'Total'].tolist()\n            },\n            {\n                'x-axis': x_axis,\n                'y-axis': 'Total',\n                'lineLabels': line_labels[1],\n                'data': data.loc[data[x_axis] == line_labels[1], 'Total'].tolist()\n            },\n            {\n                'x-axis': x_axis,\n                'y-axis': 'Total',\n                'lineLabels': line_labels[2],\n                'data': data.loc[data[x_axis] == line_labels[2], 'Total'].tolist()\n            },\n            {\n                'x-axis': x_axis,\n                'y-axis': 'Total',\n                'lineLabels': line_labels[3],\n                'data': data.loc[data[x_axis] == line_labels[3], 'Total'].tolist()\n            }\n        ],\n        'chartTitle': 'Sales by Date and Product Line'\n    }\n\n    return result"
      // },
      // {
      //     "chartType": "SCATTER PLOT",
      //     "chartData": {
      //         "labels": [
      //           548.9715,
      //           80.22,
      //           340.5255,
      //           489.048,
      //           634.3785,
      //           627.6165,
      //           433.692,
      //           772.38,
      //           76.146,
      //           172.746,
      //           60.816,
      //           107.142,
      //           246.4875,
      //           453.495,
      //           749.49,
      //           590.436,
      //           506.6355,
      //           457.443,
      //           172.2105,
      //           84.63,
      //           451.71,
      //           277.137,
      //           69.72,
      //           181.44,
      //           279.1845,
      //           441.756,
      //           35.196,
      //           184.107,
      //           463.89,
      //           235.2105,
      //           494.1825,
      //           737.7615,
      //           703.752,
      //           202.818,
      //           417.564,
      //           71.526,
      //           328.755,
      //           575.316,
      //           461.328,
      //           253.008,
      //           91.056,
      //           117.831,
      //           435.456,
      //           829.08,
      //           32.277,
      //           394.632,
      //           535.7205,
      //           189.0945,
      //           119.259,
      //           867.615,
      //           671.79,
      //           234.0975,
      //           75.054,
      //           16.2015,
      //           33.936,
      //           722.232,
      //           93.114,
      //           752.64,
      //           759.675,
      //           192.843,
      //           77.931,
      //           351.099,
      //           520.4115,
      //           166.005,
      //           318.108,
      //           166.635,
      //           70.287,
      //           614.943,
      //           827.085,
      //           19.2465,
      //           939.54,
      //           652.26,
      //           152.838,
      //           478.233,
      //           705.6315,
      //           437.325,
      //           463.428,
      //           189.0945,
      //           822.255,
      //           106.995,
      //           624.897,
      //           304.542,
      //           161.7,
      //           337.512,
      //           256.7775,
      //           610.491,
      //           401.73,
      //           362.943,
      //           44.5935,
      //           485.037,
      //           198.996,
      //           471.03,
      //           161.553,
      //           608.202,
      //           94.2375,
      //           102.018,
      //           922.635,
      //           78.435,
      //           166.1625,
      //           521.01,
      //           51.1455,
      //           742.2975,
      //           218.0115,
      //           367.038,
      //           223.0725,
      //           931.035,
      //           172.494,
      //           391.419,
      //           321.111,
      //           860.685,
      //           34.629,
      //           309.3615,
      //           535.374,
      //           548.7615,
      //           763.4655,
      //           85.113,
      //           115.185,
      //           53.928,
      //           115.08,
      //           112.224,
      //           836.304,
      //           419.832,
      //           944.622,
      //           536.844,
      //           474.348,
      //           688.6215,
      //           169.3125,
      //           299.8485,
      //           575.736,
      //           853.146,
      //           291.207,
      //           580.419,
      //           146.328,
      //           550.935,
      //           512.19,
      //           284.193,
      //           138.1275,
      //           216.846,
      //           545.055,
      //           609,
      //           942.9,
      //           950.25,
      //           720.3,
      //           31.9305,
      //           491.085,
      //           291.438,
      //           316.47,
      //           277.788,
      //           603.624,
      //           272.664,
      //           384.468,
      //           254.016,
      //           786.618,
      //           103.824,
      //           680.148,
      //           484.5225,
      //           75.7785,
      //           263.97,
      //           918.729,
      //           588.357,
      //           362.712,
      //           66.8745,
      //           336.5565,
      //           160.44,
      //           418.95,
      //           357.588,
      //           1003.59,
      //           1039.29,
      //           323.064,
      //           510.972,
      //           367.5525,
      //           420.2625,
      //           175.14,
      //           333.207,
      //           166.236,
      //           319.788,
      //           186.228,
      //           165.4485,
      //           465.444,
      //           273.42,
      //           472.311,
      //           323.148,
      //           162.75,
      //           288.204,
      //           90.699,
      //           56.952,
      //           793.716,
      //           195.174,
      //           77.7735,
      //           293.202,
      //           242.676,
      //           154.392,
      //           829.71,
      //           107.31,
      //           171.7275,
      //           78.0045,
      //           91.77,
      //           26.5545,
      //           174.3,
      //           374.7975,
      //           120.645,
      //           241.458,
      //           451.3635,
      //           271.95,
      //           93.2925,
      //           217.6335,
      //           629.8425,
      //           299.565,
      //           95.6655,
      //           942.4485,
      //           247.8735,
      //           881.307,
      //           484.89,
      //           146.223,
      //           217.6335,
      //           19.194,
      //           130.0425,
      //           298.116,
      //           796.908,
      //           180.621,
      //           285.705,
      //           456.288,
      //           62.0025,
      //           13.167,
      //           90.825,
      //           183.036,
      //           655.5465,
      //           155.652,
      //           571.41,
      //           532.728,
      //           170.877,
      //           33.3585,
      //           794.6505,
      //           310.044,
      //           545.37,
      //           195.594,
      //           91.4025,
      //           232.155,
      //           69.405,
      //           94.1745,
      //           235.683,
      //           125.517,
      //           195.72,
      //           263.13,
      //           788.508,
      //           399.756,
      //           256.41,
      //           94.185,
      //           326.424,
      //           536.991,
      //           439.8975,
      //           369.495,
      //           30.219,
      //           99.75,
      //           494.76,
      //           137.004,
      //           69.6675,
      //           163.233,
      //           135.45,
      //           276.948,
      //           709.317,
      //           69.09,
      //           160.86,
      //           233.52,
      //           57.1725,
      //           723.24,
      //           148.974,
      //           783.3,
      //           297.108,
      //           373.17,
      //           354.0075,
      //           44.352,
      //           203.553,
      //           25.263,
      //           628.173,
      //           352.5795,
      //           229.11,
      //           400.764,
      //           745.395,
      //           462.21,
      //           587.664,
      //           38.85,
      //           16.107,
      //           628.929,
      //           200.214,
      //           350.07,
      //           78.603,
      //           224.4375,
      //           356.5485,
      //           697.368,
      //           423.15,
      //           204.6975,
      //           65.604,
      //           76.356,
      //           190.155,
      //           272.58,
      //           121.128,
      //           493.794,
      //           252.042
      //         ],
      //         "dataset": [
      //             {
      //                 "x-axis": "Date",
      //                 "y-axis": "Total",
      //                 "lineLabel": "Total Sales",
      //                 "data": [
      //                     548,
      //                     80,
      //                     340,
      //                     489,
      //                     634,
      //                     627,
      //                     433,
      //                     772,
      //                     76,
      //                     172,
      //                     60,
      //                     107,
      //                     246,
      //                     453,
      //                     749,
      //                     590,
      //                     506,
      //                     457,
      //                     172,
      //                     84,
      //                     451,
      //                     277,
      //                     69,
      //                     181,
      //                     279,
      //                     441,
      //                     35,
      //                     184,
      //                     463,
      //                     235,
      //                     494,
      //                     737,
      //                     703,
      //                     202,
      //                     417,
      //                     71,
      //                     328,
      //                     575,
      //                     461,
      //                     253,
      //                     91,
      //                     117,
      //                     435,
      //                     829,
      //                     32,
      //                     394,
      //                     535,
      //                     189,
      //                     119,
      //                     867,
      //                     671,
      //                     234,
      //                     75,
      //                     16,
      //                     33,
      //                     722,
      //                     93,
      //                     752,
      //                     759,
      //                     192,
      //                     77,
      //                     351,
      //                     520,
      //                     166,
      //                     318,
      //                     166,
      //                     70,
      //                     614,
      //                     827,
      //                     19,
      //                     939,
      //                     652,
      //                     152,
      //                     478,
      //                     705,
      //                     437,
      //                     463,
      //                     189,
      //                     822,
      //                     106,
      //                     624,
      //                     304,
      //                     161,
      //                     337,
      //                     256,
      //                     610,
      //                     401,
      //                     362,
      //                     44,
      //                     485,
      //                     198,
      //                     471,
      //                     161,
      //                     608,
      //                     94,
      //                     102,
      //                     922,
      //                     78,
      //                     166,
      //                     521,
      //                     51,
      //                     742,
      //                     218,
      //                     367,
      //                     223,
      //                     931,
      //                     172,
      //                     391,
      //                     321,
      //                     860,
      //                     34,
      //                     309,
      //                     535,
      //                     548,
      //                     763,
      //                     85,
      //                     115,
      //                     53,
      //                     115,
      //                     112,
      //                     836,
      //                     419,
      //                     944,
      //                     536,
      //                     474,
      //                     688,
      //                     169,
      //                     299,
      //                     575,
      //                     853,
      //                     291,
      //                     580,
      //                     146,
      //                     550,
      //                     512,
      //                     284,
      //                     138,
      //                     216,
      //                     545,
      //                     609,
      //                     942,
      //                     950,
      //                     720,
      //                     31,
      //                     491,
      //                     291,
      //                     316,
      //                     277,
      //                     603,
      //                     272,
      //                     384,
      //                     254,
      //                     786,
      //                     103,
      //                     680,
      //                     484,
      //                     75,
      //                     263,
      //                     918,
      //                     588,
      //                     362,
      //                     66,
      //                     336,
      //                     160,
      //                     418,
      //                     357,
      //                     1003,
      //                     1039,
      //                     323,
      //                     510,
      //                     367,
      //                     420,
      //                     175,
      //                     333,
      //                     166,
      //                     319,
      //                     186,
      //                     165,
      //                     465,
      //                     273,
      //                     472,
      //                     323,
      //                     162,
      //                     288,
      //                     90,
      //                     56,
      //                     793,
      //                     195,
      //                     77,
      //                     293,
      //                     242,
      //                     154,
      //                     829,
      //                     107,
      //                     171,
      //                     78,
      //                     91,
      //                     26,
      //                     174,
      //                     374,
      //                     120,
      //                     241,
      //                     451,
      //                     271,
      //                     93,
      //                     217,
      //                     629,
      //                     299,
      //                     95,
      //                     942,
      //                     247,
      //                     881,
      //                     484,
      //                     146,
      //                     217,
      //                     19,
      //                     130,
      //                     298,
      //                     796,
      //                     180,
      //                     285,
      //                     456,
      //                     62,
      //                     13,
      //                     90,
      //                     183,
      //                     655,
      //                     155,
      //                     571,
      //                     532,
      //                     170,
      //                     33,
      //                     794,
      //                     310,
      //                     545,
      //                     195,
      //                     91,
      //                     232,
      //                     69,
      //                     94,
      //                     235,
      //                     125,
      //                     195,
      //                     263,
      //                     788,
      //                     399,
      //                     256,
      //                     94,
      //                     326,
      //                     536,
      //                     439,
      //                     369,
      //                     30,
      //                     99,
      //                     494,
      //                     137,
      //                     69,
      //                     163,
      //                     135,
      //                     276,
      //                     709,
      //                     69,
      //                     160,
      //                     233,
      //                     57,
      //                     723,
      //                     148,
      //                     783,
      //                     297,
      //                     373,
      //                     354,
      //                     44,
      //                     203,
      //                     25,
      //                     628,
      //                     352,
      //                     229,
      //                     400,
      //                     745,
      //                     462,
      //                     587,
      //                     38,
      //                     16,
      //                     628,
      //                     200,
      //                     350,
      //                     78,
      //                     224,
      //                     356,
      //                     697,
      //                     423,
      //                     204,
      //                     65,
      //                     76,
      //                     190,
      //                     272,
      //                     121,
      //                     493,
      //                     252
      //                 ]
      //             }
      //         ],
      //         "chartTitle": "Total Sales Over Time"
      //     },
      //     "code": "import pandas as pd\nimport csv\n\ndef read_csv_and_plot(csv_path):\n    # Read the CSV file\n    df = pd.read_csv(csv_path)\n\n    # Extract data for a single line chart\n    data = df[['Date', 'Total']].values.tolist()\n\n    # Convert the data to the required format\n    results = {\n        \"labels\": [row[0] for row in data],\n        \"dataset\": [\n            {\n                \"x-axis\": \"Date\",\n                \"y-axis\": \"Total\",\n                \"lineLabel\": \"Total Sales\",\n                \"data\": [int(row[1]) for row in data]\n            }\n        ],\n        \"chartTitle\": \"Total Sales Over Time\"\n    }\n\n    return results\n\n# Example usage\ncsv_path = \"D:/AutoDash/app/csv/test-new.csv\"\nresults = read_csv_and_plot(csv_path)\nprint(results)"
      // }
  ]
    
  );
  const [isDataFetched, setIsDataFetched] = useState(true);

  const promptMap = {
    "Compare the sales of the cities Pune, Mumbai, Chennai with a line graph": (
      <DashboardCard08 />
    ),
    "What is the average sales of Pune stores in 2024": <DashboardCard14 />,
    "Compare the revenue generated by Market Yard Store vs Viman Nagar Store": (
      <DashboardCard06 />
    ),
    "Display the popularity trends of products in different seasons": (
      <DashboardCard06 />
    ),
    "What is the average sales for the month of March?": <DashboardCard14 />,
  };

  const handleFileInput = (e) => {
    console.log(e.target.files[0]);
    setFileInput1(e.target.files[0].name);
  };
  const fetchChartData = async () => {
    const response = await fetch("http://localhost:5000/generate_charts", {
      method: "POST",
    });
    const data = await response.json();
    setIsDataFetched(true);
    if (!data) return;
    if (response.status !== 200) return console.log("Error fetching data");

    console.log("data fetched", data);
    setGeneratedChartData(data);
    return data;
  };

  useEffect(() => {
    fetchChartData();
  }, []);

  return (
    <>
      {pageNo == 0 && (
        <>
          {/* upload csv or connect with mysql option */}
          <div className="flex flex-wrap gap-4 mb-8">
            <button
              className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white"
              onClick={() => setOpenCSVUploader(true)}
            >
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only"> Upload CSV</span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">Connect with MySQL</span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">
                Connect with Air Table
              </span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">
                Connect with Data Bricks
              </span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">
                Connect with Google Big Query
              </span>
            </button>
            <button className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white">
              <svg
                className="fill-current shrink-0"
                width="16"
                height="16"
                viewBox="0 0 16 16"
              >
                <path d="M15 7H9V1c0-.6-.4-1-1-1S7 .4 7 1v6H1c-.6 0-1 .4-1 1s.4 1 1 1h6v6c0 .6.4 1 1 1s1-.4 1-1V9h6c.6 0 1-.4 1-1s-.4-1-1-1z" />
              </svg>
              <span className="ml-3 max-xs:sr-only">Connect with mongoDB</span>
            </button>
          </div>
          <Backdrop
            sx={{
              color: "#fff",
              zIndex: (theme) => theme.zIndex.drawer + 1,
            }}
            open={openCSVUploader}
            onClick={(e) => {
              if (!e) return;
              if (!e.target.className.startsWith) return;
              if (!e.target.className.startsWith("MuiBackdrop-root")) return;
              setOpenCSVUploader(false);
            }}
          >
            <div className="flex flex-col items-center justify-center h-screen">
              {/* click here to upload file or drag and drop a file*/}
              <div className="bg-white p7 rounded mx-auto">
                <div
                  x-data="dataFileDnD()"
                  className="relative flex flex-col p-4 text-gray-400 border border-gray-200 rounded ml-4 mr-4 mt-4"
                >
                  {fileInput1 ? (
                    <>{fileInput1} uploaded successfully</>
                  ) : (
                    <div
                      x-ref="dnd"
                      className="relative flex flex-col text-gray-400 border-dashed rounded cursor-pointer"
                    >
                      <input
                        accept="*"
                        type="file"
                        multiple
                        className="absolute inset-0 z-50 w-full h-full p-0 m-0 outline-none opacity-0 cursor-pointer"
                        title=""
                        onChange={handleFileInput}
                      />

                      <div className="flex flex-col items-center justify-center py-10 text-center">
                        <svg
                          className="w-6 h-6 mr-1 text-current-50"
                          xmlns="http://www.w3.org/2000/svg"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                          />
                        </svg>
                        <p className="m-0">
                          Drag your files here or click in this area.
                        </p>
                      </div>
                    </div>
                  )}
                </div>
                {/* next  button */}
                <div style={{ display: "flex" }}>
                  <button
                    className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white"
                    onClick={() => {
                      setpageNo(1);
                      setTimeout(() => {
                        setpageNo(2);
                      }, 15000);
                    }}
                    style={{
                      marginTop: "20px",
                      marginBottom: "20px",
                      marginLeft: "auto",
                      marginRight: "auto",
                    }}
                  >
                    {" "}
                    Next{" "}
                  </button>
                </div>
              </div>
            </div>
          </Backdrop>
        </>
      )}
      {!isDataFetched && (
        <>
          <LoaderComponent />
        </>
      )}

      {/* Cards */}
      {pageNo == 2 && generatedChartData && (
        <div className="grid grid-cols-12 gap-6">
          {generatedChartData.map((chart, index) => {
            console.log(chart.chartType);
            console.log(chart.chartData);
            if (chart.chartType === "BAR CHART" && chart.chartData) {
              return (
                <DashboardCard04
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (chart.chartType === "PIE CHART" && chart.chartData) {
              return (
                <DashboardCard16
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (
              chart.chartType === "LINE CHART SINGLE" &&
              chart.chartData
            ) {
              return (
                <DashboardCard02
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            } else if (
              chart.chartType === "LINE CHART MULTIPLE" &&
              chart.chartData
            ) {
              return (
                <DashboardCard03
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            }
            else if (
              chart.chartType === "SCATTER PLOT" &&
              chart.chartData
            ) {
              return (
                <DashboardCard14
                  key={index}
                  fetchedChartData={chart.chartData}
                />
              );
            }
          })}
          {/* <DashboardCard06 /> */}
          {/* Line chart (Acme Plus) */}
          {/* <DashboardCard01 /> */}
          {/* Doughnut chart (Top Countries) */}
          {/* <DashboardCard16 /> */}
          {/* Line chart (Acme Professional) */}
          {/* <DashboardCard03 /> */}
          {/* Bar chart (Direct vs Indirect) */}
          {/* <DashboardCard04 /> */}
          {/* Line chart (Real Time Value) */}
          {/* <DashboardCard05 /> */}

          {/* Line chart (Acme Advanced) */}
          {/* <DashboardCard02 /> */}
          {/* Table (Top Channels) */}
          {/* <DashboardCard07 /> */}
          {/* Line chart (Sales Over Time) */}
          {/* <DashboardCard08 /> */}
          {/* Stacked bar chart (Sales VS Refunds) */}
          {/* <DashboardCard09 /> */}
          {/* Card (Customers) */}
          {/* <DashboardCard10 /> */}
          {/* Card (Reasons for Refunds) */}
          {/* <DashboardCard11 /> */}
          {/* Card (Recent Activity) */}
          {/* <DashboardCard12 /> */}
          {/* Card (Income/Expenses) */}
          {/* <DashboardCard13 /> */}
        </div>
      )}

      {/* enter prompt and click submit */}
      {pageNo == 3 && (
        <div className="flex flex-col items-center h-screen">
          <div
            className="bg-white p-7 rounded mx-auto"
            style={{ display: "flex", alignItems: "center" }}
          >
            <div className="flex flex-col items-center justify-center py-10 text-center">
              {/* input csv file */}
              <div className="bg-white p7 rounded mx-auto">
                <div
                  x-data="dataFileDnD()"
                  className="relative flex flex-col p-4 text-gray-400 border border-gray-200 rounded"
                >
                  {fileInput2 ? (
                    <>{fileInput2} Uploaded successfully</>
                  ) : (
                    <div
                      x-ref="dnd"
                      className="relative flex flex-col text-gray-400 border-dashed rounded cursor-pointer"
                    >
                      <input
                        accept="*"
                        type="file"
                        multiple
                        className="absolute inset-0 z-50 w-full h-full p-0 m-0 outline-none opacity-0 cursor-pointer"
                        title=""
                        onChange={handleFileInput2}
                      />

                      <div className="flex flex-col items-center justify-center py-10 text-center">
                        <svg
                          className="w-6 h-6 mr-1 text-current-50"
                          xmlns="http://www.w3.org/2000/svg"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="2"
                            d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                          />
                        </svg>
                        <p className="m-0">
                          Drag your files here or click in this area.
                        </p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
              <p className="m-0 mt-10">Enter the prompt and click on submit</p>
              <textarea
                type="text"
                className="border border-gray-200 rounded p-2"
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                style={{ marginTop: "20px" }}
                rows="4"
              />
              <button
                className="btn bg-gray-900 text-gray-100 hover:bg-gray-800 dark:bg-gray-100 dark:text-gray-800 dark:hover:bg-white"
                style={{ marginTop: "20px" }}
                onClick={() => {
                  setPromptResult(<CircularProgress />);

                  setTimeout(() => {
                    setPromptResult(promptMap[prompt]);
                  }, 5000);
                }}
              >
                {" "}
                Submit{" "}
              </button>
            </div>
            <div>{promptResult}</div>
          </div>
        </div>
      )}
    </>
  );
};

export default DashboardCreator;
